(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector
   ["#1d2021" "#fb4934" "#b8bb26" "#fabd2f" "#83a598" "#cc241d" "#8ec07c" "#ebdbb2"])
 '(custom-safe-themes
   '("246a9596178bb806c5f41e5b571546bb6e0f4bd41a9da0df5dfbca7ec6e2250c" "d268b67e0935b9ebc427cad88ded41e875abfcc27abd409726a92e55459e0d01" "b186688fbec5e00ee8683b9f2588523abdf2db40562839b2c5458fcfb322c8a4" "5784d048e5a985627520beb8a101561b502a191b52fa401139f4dd20acb07607" "1f1b545575c81b967879a5dddc878783e6ebcca764e4916a270f9474215289e5" "97db542a8a1731ef44b60bc97406c1eb7ed4528b0d7296997cbb53969df852d6" "f91395598d4cb3e2ae6a2db8527ceb83fed79dbaf007f435de3e91e5bda485fb" "2c49d6ac8c0bf19648c9d2eabec9b246d46cb94d83713eaae4f26b49a8183fc4" "75b8719c741c6d7afa290e0bb394d809f0cc62045b93e1d66cd646907f8e6d43" "76bfa9318742342233d8b0b42e824130b3a50dcc732866ff8e47366aed69de11" "0a41da554c41c9169bdaba5745468608706c9046231bbbc0d155af1a12f32271" "4bca89c1004e24981c840d3a32755bf859a6910c65b829d9441814000cf6c3d0" "990e24b406787568c592db2b853aa65ecc2dcd08146c0d22293259d400174e37" "e074be1c799b509f52870ee596a5977b519f6d269455b84ed998666cf6fc802a" "01cf34eca93938925143f402c2e6141f03abb341f27d1c2dba3d50af9357ce70" "c4bdbbd52c8e07112d1bfd00fee22bf0f25e727e95623ecb20c4fa098b74c1bd" "ff3c57a5049010a76de8949ddb629d29e2ced42b06098e046def291989a4104a" "4a8d4375d90a7051115db94ed40e9abb2c0766e80e228ecad60e06b3b397acab" "3df5335c36b40e417fec0392532c1b82b79114a05d5ade62cfe3de63a59bc5c6" "c335adbb7d7cb79bc34de77a16e12d28e6b927115b992bccc109fb752a365c72" "e3c64e88fec56f86b49dcdc5a831e96782baf14b09397d4057156b17062a8848" "f2927d7d87e8207fa9a0a003c0f222d45c948845de162c885bf6ad2a255babfd" "f94110b35f558e4c015b2c680f150bf8a19799d775f8352c957d9d1054b0a210" default))
 '(exwm-floating-border-color "#191b20")
 '(fci-rule-color "#7c6f64")
 '(highlight-tail-colors
   ((("#333a38" "#99bb66" "green")
     . 0)
    (("#2b3d48" "#46D9FF" "brightcyan")
     . 20)))
 '(jdee-db-active-breakpoint-face-colors (cons "#0d1011" "#fabd2f"))
 '(jdee-db-requested-breakpoint-face-colors (cons "#0d1011" "#b8bb26"))
 '(jdee-db-spec-breakpoint-face-colors (cons "#0d1011" "#928374"))
 '(objed-cursor-color "#fb4934")
 '(pdf-view-midnight-colors (cons "#ebdbb2" "#282828"))
 '(rustic-ansi-faces
   ["#282828" "#fb4934" "#b8bb26" "#fabd2f" "#83a598" "#cc241d" "#8ec07c" "#ebdbb2"])
 '(safe-local-variable-values
   '((haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-server:exe:codedown-tests-server")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-lsp:exe:codedown-tests-lsp")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-core:lib" "codedown-test:lib" "codedown-tests-regular:exe:codedown-tests-regular")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-core:lib" "codedown-test:lib" "codedown-tests-unit:lib" "codedown-tests-unit:exe:codedown-tests-unit")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-server:lib" "codedown-test:lib" "codedown-tests-regular:exe:codedown-tests-regular")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "ot:lib" "ot:tests")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-stress:exe:codedown-tests-stress")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-tests-app:exe:codedown-tests-app")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-app:exe:codedown-tests-app")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-widgets:exe:codedown-tests-widgets")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-app-collaboration:exe:codedown-tests-app-collaboration")
     (eval add-hook 'before-save-hook 'time-stamp)
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-core:lib" "codedown-test:lib" "codedown-tests-collaboration:exe:codedown-tests-collaboration")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-collaboration:exe:codedown-tests-collaboration")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-core:lib" "codedown-test:lib" "codedown-tests-unit:exe:codedown-tests-unit")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-cypress:exe:codedown-tests-cypress")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-selenium:exe:codedown-tests-selenium")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-core:exe:nix-event-parser")
     (eval setenv "PATH"
           (concat
            (getenv "PATH")
            ":"
            (substring
             (shell-command-to-string "nix-instantiate --eval --expr 'let pkgs = import \"/home/tom/codedown/nix/pinned-nixpkgs.nix\" {}; in with pkgs; lib.makeBinPath [openjdk11 kubectl kind kubernetes-helm firefox emptyMetaChrome chromedriver firefox geckodriver]'")
             1 -2)))
     (eval setq exec-path
           (append exec-path
                   (split-string
                    (substring
                     (shell-command-to-string "nix-instantiate --eval --expr 'let pkgs = import \"/home/tom/codedown/nix/pinned-nixpkgs.nix\" {}; in with pkgs; lib.makeBinPath [openjdk11 kubectl kind kubernetes-helm firefox emptyMetaChrome chromedriver firefox geckodriver]'")
                     1 -2)
                    ":")))
     (eval setenv "PATH"
           (concat
            (getenv "PATH")
            ":/nix/store/lvmz1yy4v20f0c7rg55bhfxwiaqfi2rj-openjdk-11.0.12+7/bin:/nix/store/z971rmnsv5nzp0drvcm49r549kcm94ci-kubectl-1.22.2/bin:/nix/store/gxqfzw8ai9hs8xnvdgdx2xxc4jdk1dw8-kind-0.11.1/bin:/nix/store/v01nyfwprws3dv99wcpbgqxq7pwww4gg-helm-3.7.0/bin:/nix/store/91fw6fkfg200f1jgrc0q3p84ysq6l960-firefox-93.0/bin:/nix/store/gs47dmc8r6z1krfhw22cc15kvmd04gff-wrapped-chrome/bin:/nix/store/r4z13h3dp8ajzwwxpf4i4pq50kf29ccj-chromedriver-95.0.4638.17/bin:/nix/store/91fw6fkfg200f1jgrc0q3p84ysq6l960-firefox-93.0/bin:/nix/store/75yhrcjj0ymrb08bal9wyyvlndfzq47v-geckodriver-0.29.1/bin"))
     (eval setq exec-path
           (append exec-path
                   '("/nix/store/lvmz1yy4v20f0c7rg55bhfxwiaqfi2rj-openjdk-11.0.12+7/bin" "/nix/store/z971rmnsv5nzp0drvcm49r549kcm94ci-kubectl-1.22.2/bin" "/nix/store/gxqfzw8ai9hs8xnvdgdx2xxc4jdk1dw8-kind-0.11.1/bin" "/nix/store/v01nyfwprws3dv99wcpbgqxq7pwww4gg-helm-3.7.0/bin" "/nix/store/91fw6fkfg200f1jgrc0q3p84ysq6l960-firefox-93.0/bin" "/nix/store/gs47dmc8r6z1krfhw22cc15kvmd04gff-wrapped-chrome/bin" "/nix/store/r4z13h3dp8ajzwwxpf4i4pq50kf29ccj-chromedriver-95.0.4638.17/bin" "/nix/store/91fw6fkfg200f1jgrc0q3p84ysq6l960-firefox-93.0/bin" "/nix/store/75yhrcjj0ymrb08bal9wyyvlndfzq47v-geckodriver-0.29.1/bin")))
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-demo:exe:codedown-tests-demo" "codedown-server:lib" "codedown-server-types:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-server-openapi:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-server-typescript:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "resource-map:lib" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-runner:lib" "codedown-runner:exe:codedown-runner" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-mounter-process:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-server-types:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-app-selenium:exe:codedown-tests-app-selenium")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-store-operator:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-runner:exe:codedown-runner" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-runner:exe:codedown-runner")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-unit:exe:codedown-tests-unit" "codedown-server:lib" "codedown-server-types:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-unit:exe:codedown-tests-unit" "codedown-server:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-unit:exe:codedown-tests-unit")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-mounter:lib" "codedown-mounter:exe:codedown-mounter" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-launcher-raw:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "haskell-rclone:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-db:lib" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server" "rclone:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-editor:exe:codedown-editor" "codedown-editor:lib" "codedown-core:lib" "codedown-server-types:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:lib" "codedown-tests-regular:exe:codedown-tests-regular")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-test-contexts:lib" "codedown-job-manager:lib" "codedown-job-manager:exe:job-manager" "codedown-job-manager:exe:job-manager-tests")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "aeson-typescript:lib" "aeson-typescript:aeson-typescript-tests")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "aeson-typescript:lib" "aeson-typescript:tests:aeson-typescript-tests")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "aeson-typescript:lib" "aeson-typescript:test:aeson-typescript-test")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-launcher-k8s:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-launcher-docker:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-test-contexts:lib" "codedown-job-manager:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-test-contexts:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-db:lib" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-db:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-job-manager:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:exe:codedown-tests" "codedown-test:lib" "codedown-server-types:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-test:exe:codedown-tests" "codedown-test:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-editor:exe:codedown-editor" "codedown-editor:lib" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-core:lib" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server" "codedown-server:exe:codedown-server-tests")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server" "codedown-server:exe:codedown-server-tests")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-server-types:lib" "codedown-server:lib" "codedown-server:exe:codedown-server")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown-server:lib" "codedown-server:exe:codedown-server")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown:exe:codedown-test" "codedown-test:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown:exe:codedown-test" "codedown-test:lib")
     (haskell-process-args-stack-ghci quote
                                      ("--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown:exe:codedown-test" "codedown-test:lib"))
     (haskell-process-args-stack-ghci quote
                                      ("--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown:lib" "codedown-test:lib"))
     (foo . "bar")
     (package-lint-main-file . "haskell-mode-pkg.el")
     (eval c-set-offset 'inlambda 0)
     (c-block-comment-prefix . "  ")
     (intero-targets "aeson-typescript:lib" "aeson-typescript:test:aeson-typescript-test")
     (git-commit-major-mode . git-commit-elisp-text-mode)
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown:exe:codedown" "codedown:lib" "codedown:exe:codedown-test" "codedown-test:lib" "codedown-core:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.yaml" "codedown:exe:codedown" "codedown:lib" "codedown:exe:codedown-test" "codedown-test:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "--stack-yaml" "/home/tom/codedown/stack.app.yaml" "codedown:exe:codedown" "codedown:lib" "codedown:exe:codedown-test" "codedown-test:lib")
     (haskell-process-args-stack-ghci "--ghci-options=-ferror-spans" "--no-build" "--no-load" "codedown:exe:codedown" "codedown:lib" "codedown:exe:codedown-test" "codedown-test:lib")
     (dante-target . "codedown-server:exe:codedown-server")
     (eval c-set-offset 'access-label '-)
     (eval c-set-offset 'substatement-open 0)
     (eval c-set-offset 'arglist-cont-nonempty '+)
     (eval c-set-offset 'arglist-cont 0)
     (eval c-set-offset 'arglist-intro '+)
     (eval c-set-offset 'inline-open 0)
     (eval c-set-offset 'defun-open 0)
     (eval c-set-offset 'innamespace 0)
     (indicate-empty-lines . t)))
 '(vc-annotate-background "#282828")
 '(vc-annotate-color-map
   (list
    (cons 20 "#b8bb26")
    (cons 40 "#cebb29")
    (cons 60 "#e3bc2c")
    (cons 80 "#fabd2f")
    (cons 100 "#fba827")
    (cons 120 "#fc9420")
    (cons 140 "#fe8019")
    (cons 160 "#ed611a")
    (cons 180 "#dc421b")
    (cons 200 "#cc241d")
    (cons 220 "#db3024")
    (cons 240 "#eb3c2c")
    (cons 260 "#fb4934")
    (cons 280 "#e05744")
    (cons 300 "#c66554")
    (cons 320 "#ac7464")
    (cons 340 "#7c6f64")
    (cons 360 "#7c6f64")))
 '(vc-annotate-very-old-color nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-preview-common ((t (:background "#21e824bc35b0"))))
 '(company-scrollbar-bg ((t (:background "#2bd12f784561"))))
 '(company-scrollbar-fg ((t (:background "#21e824bc35b0"))))
 '(company-tooltip ((t (:inherit default :background "#1bf61e4b2c46"))))
 '(company-tooltip-annotation ((t (:foreground "deep sky blue"))))
 '(company-tooltip-annotation-selection ((t (:inherit company-tooltip-annotation :foreground "deep sky blue" :weight bold))))
 '(company-tooltip-common ((t (:inherit font-lock-constant-face))))
 '(company-tooltip-selection ((t (:inherit font-lock-function-name-face))))
 '(helm-selection ((t :background "gray25" :distant-foreground "black" :foreground "white smoke"))))
